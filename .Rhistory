install.packages("plotly")
?coord
install.packages("plotly")
knitr::opts_chunk$set(echo = TRUE, fig.align = "center", message = FALSE, warning = FALSE, error = FALSE)
#Required packages
pti <- c("data.table", "tidyverse", "plotly")
pti <- pti[!(pti %in% installed.packages())]
if(length(pti)>0){
install.packages(pti)
}
library(data.table)
library(tidyverse)
library(plotly)
prepare_data = function(from, ax){
data = fread(from)
columns = c("class", paste(paste(ax, 'T', sep = ''), 1:(ncol(data)-1), sep = ''))
colnames(data) = columns
data
}
transform_long = function(data, ax){
data = data[, "time series" := 1:nrow(data)]
data_long = gather(data, "time index", val, paste(ax, 'T1', sep = ''):paste(ax, 'T315', sep = ''))
colnames(data_long)[4] = ax
data_long[,3] = unlist(lapply(data_long[,3], function(x){as.numeric(substring(x, 3, length(x) + 4))}))
data_long = data_long[order(data_long[,2], data_long[,3]),]
as.data.table(data_long)
}
coord = function(data, ax){
x = data[data[, .I[15], by = class]$V1][, -1]
y = t(x)
y = y[,order(data[data[, .I[1], by = class]$V1][, class])]
y = cbind(y, apply(y, 2, cumsum))
y = cbind(y, apply(y[,9:16], 2, cumsum))
colnames(y) = c(paste(ax, 1:8, sep = "_"), paste("vel", 1:8, sep = "_"), paste("coord", 1:8, sep = "_"))
y
}
pca_plot = function(value){
series = unlist(unique(x_train_long[class == value, 2]))
set.seed(12345)
randoms = sample(series, 2)
plot_data = data_long[`time series` %in% randoms,]
plot_data[,1] = apply(plot_data[,1], 2, as.character)
ggplot(plot_data, aes(x = `time index`, y = PCA1, color = `time series`)) +
geom_point() +
labs(title = paste("1D Representation of Data For Class", value, sep = ' '),
x = "Time Index",
y = "First Component")
}
pca_class = function(value){
data = data_long[data_long$class == value,]
pca = princomp(data[, 3:5], cor = T)
summary(pca, loadings=T)
}
x_train = prepare_data("https://drive.google.com/uc?export=download&id=1KDhDT0FE5lkjvn62YTCJ87vZ7A5uS5TT", "X")
y_train = prepare_data("https://drive.google.com/uc?export=download&id=1fZCNBdJ40Df5werSu_Ud4GUmCBcBIfaI", "Y")
z_train = prepare_data("https://drive.google.com/uc?export=download&id=1jdZ2_NiFil0b4EbLBAfDJ43VQcOgulpf", "Z")
data_wide = cbind(x_train, y_train[, 2:ncol(y_train)], z_train[, 2:ncol(z_train)])
x_train_long = transform_long(x_train, 'X')
y_train_long = transform_long(y_train, 'Y')
z_train_long = transform_long(z_train, 'Z')
data_long = x_train_long %>%
left_join(y_train_long, by = c("time series", "time index", "class")) %>%
left_join(z_train_long, by = c("time series", "time index", "class"))
data_long = data_long[, c(2, 3, 4, 5, 6, 1)]
head(x_train)
head(y_train)
head(z_train)
head(data_wide)
head(x_train_long)
head(y_train_long)
head(z_train_long)
head(data_long)
x_coord = coord(x_train, 'X')
y_coord = coord(y_train, 'Y')
z_coord = coord(z_train, 'Z')
# a = y[, "coord_2"]
# b = y2[, "coord_2"]
#
# result = data.table(a, b)
# ggplot(result, aes(x = a, y = b)) +
#   geom_point()
plot_ly(x = x_coord[,"coord_1"], y = y_coord[,"coord_1"], z = z_coord[,"coord_1"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 1")
plot_ly(x = x_coord[,"coord_2"], y = y_coord[,"coord_2"], z = z_coord[,"coord_2"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 2")
plot_ly(x = x_coord[,"coord_3"], y = y_coord[,"coord_3"], z = z_coord[,"coord_3"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 3")
plot_ly(x = x_coord[,"coord_4"], y = y_coord[,"coord_4"], z = z_coord[,"coord_4"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 4")
plot_ly(x = x_coord[,"coord_5"], y = y_coord[,"coord_5"], z = z_coord[,"coord_5"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 5")
plot_ly(x = x_coord[,"coord_6"], y = y_coord[,"coord_6"], z = z_coord[,"coord_6"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 6")
plot_ly(x = x_coord[,"coord_7"], y = y_coord[,"coord_7"], z = z_coord[,"coord_7"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 7")
plot_ly(x = x_coord[,"coord_8"], y = y_coord[,"coord_8"], z = z_coord[,"coord_8"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 8")
knitr::opts_chunk$set(echo = TRUE)
class1 <- cbind(x[x$Class == 1, 2:316], y[y$Class == 1, 2:316], z[z$Class == 1, 2:316])
knitr::opts_chunk$set(echo = TRUE, message=FALSE, fig.align = "center")
url <- "https://ars.els-cdn.com/content/image/1-s2.0-S1574119209000674-gr4.jpg"
url <- "https://ars.els-cdn.com/content/image/1-s2.0-S1574119209000674-gr4.jpg"
library(tidyverse)
library(kableExtra)
library(RColorBrewer)
library(ggExtra)
library(data.table)
library(patchwork)
library(plotly)
prepare_data = function(from, ax){
data = fread(from)
columns = c("class", paste(paste(ax, 'T', sep = ''), 1:(ncol(data)-1), sep = ''))
colnames(data) = columns
data
}
transform_long = function(data, ax){
data = data[, "time series" := 1:nrow(data)]
data_long = gather(data, "time index", val, paste(ax, 'T1', sep = ''):paste(ax, 'T315', sep = ''))
colnames(data_long)[4] = ax
data_long[,3] = unlist(lapply(data_long[,3], function(x){as.numeric(substring(x, 3, length(x) + 4))}))
data_long = data_long[order(data_long[,2], data_long[,3]),]
as.data.table(data_long)
}
coord = function(data, ax){
x = data[data[, .I[15], by = class]$V1][, -1]
y = t(x)
y = y[,order(data[data[, .I[1], by = class]$V1][, class])]
y = cbind(y, apply(y, 2, cumsum))
y = cbind(y, apply(y[,9:16], 2, cumsum))
colnames(y) = c(paste(ax, 1:8, sep = "_"), paste("vel", 1:8, sep = "_"), paste("coord", 1:8, sep = "_"))
y
}
pca_plot = function(value){
series = unlist(unique(x_train_long[class == value, 2]))
set.seed(12345)
randoms = sample(series, 2)
plot_data = data_long[`time series` %in% randoms,]
plot_data[,1] = apply(plot_data[,1], 2, as.character)
ggplot(plot_data, aes(x = `time index`, y = PCA1, color = `time series`)) +
geom_point() +
labs(title = paste("1D Representation of Data For Class", value, sep = ' '),
x = "Time Index",
y = "First Component")
}
pca_class = function(value){
data = data_long[data_long$class == value,]
pca = princomp(data[, 3:5], cor = T)
summary(pca, loadings=T)
}
x_train = prepare_data("https://drive.google.com/uc?export=download&id=1KDhDT0FE5lkjvn62YTCJ87vZ7A5uS5TT", "X")
y_train = prepare_data("https://drive.google.com/uc?export=download&id=1fZCNBdJ40Df5werSu_Ud4GUmCBcBIfaI", "Y")
z_train = prepare_data("https://drive.google.com/uc?export=download&id=1jdZ2_NiFil0b4EbLBAfDJ43VQcOgulpf", "Z")
data_wide = cbind(x_train, y_train[, 2:ncol(y_train)], z_train[, 2:ncol(z_train)])
x_train_long = transform_long(x_train, 'X')
y_train_long = transform_long(y_train, 'Y')
z_train_long = transform_long(z_train, 'Z')
data_long = x_train_long %>%
left_join(y_train_long, by = c("time series", "time index", "class")) %>%
left_join(z_train_long, by = c("time series", "time index", "class"))
data_long = data_long[, c(2, 3, 4, 5, 6, 1)]
head(x_train)
head(y_train)
head(z_train)
head(data_wide)
head(x_train_long)
head(y_train_long)
head(z_train_long)
head(data_long)
x_coord = coord(x_train, 'X')
y_coord = coord(y_train, 'Y')
z_coord = coord(z_train, 'Z')
plot_ly(x = x_coord[,"coord_1"], y = y_coord[,"coord_1"], z = z_coord[,"coord_1"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 1")
plot_ly(x = x_coord[,"coord_2"], y = y_coord[,"coord_2"], z = z_coord[,"coord_2"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 2")
plot_ly(x = x_coord[,"coord_3"], y = y_coord[,"coord_3"], z = z_coord[,"coord_3"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 3")
plot_ly(x = x_coord[,"coord_4"], y = y_coord[,"coord_4"], z = z_coord[,"coord_4"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 4")
plot_ly(x = x_coord[,"coord_5"], y = y_coord[,"coord_5"], z = z_coord[,"coord_5"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 5")
plot_ly(x = x_coord[,"coord_6"], y = y_coord[,"coord_6"], z = z_coord[,"coord_6"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 6")
plot_ly(x = x_coord[,"coord_7"], y = y_coord[,"coord_7"], z = z_coord[,"coord_7"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 7")
plot_ly(x = x_coord[,"coord_8"], y = y_coord[,"coord_8"], z = z_coord[,"coord_8"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 8")
x_coord = coord(x_train, 'X')
library(tidyverse)
library(kableExtra)
library(RColorBrewer)
library(ggExtra)
library(data.table)
library(patchwork)
library(plotly)
prepare_data = function(from, ax){
data = fread(from)
columns = c("class", paste(paste(ax, 'T', sep = ''), 1:(ncol(data)-1), sep = ''))
colnames(data) = columns
data
}
transform_long = function(data, ax){
data = data[, "time series" := 1:nrow(data)]
data_long = gather(data, "time index", val, paste(ax, 'T1', sep = ''):paste(ax, 'T315', sep = ''))
colnames(data_long)[4] = ax
data_long[,3] = unlist(lapply(data_long[,3], function(x){as.numeric(substring(x, 3, length(x) + 4))}))
data_long = data_long[order(data_long[,2], data_long[,3]),]
as.data.table(data_long)
}
coord = function(data, ax){
x = data[data[, .I[15], by = class]$V1][, -1]
y = t(x)
y = y[,order(data[data[, .I[1], by = class]$V1][, class])]
y = cbind(y, apply(y, 2, cumsum))
y = cbind(y, apply(y[,9:16], 2, cumsum))
colnames(y) = c(paste(ax, 1:8, sep = "_"), paste("vel", 1:8, sep = "_"), paste("coord", 1:8, sep = "_"))
y
}
pca_plot = function(value){
series = unlist(unique(x_train_long[class == value, 2]))
set.seed(12345)
randoms = sample(series, 2)
plot_data = data_long[`time series` %in% randoms,]
plot_data[,1] = apply(plot_data[,1], 2, as.character)
ggplot(plot_data, aes(x = `time index`, y = PCA1, color = `time series`)) +
geom_point() +
labs(title = paste("1D Representation of Data For Class", value, sep = ' '),
x = "Time Index",
y = "First Component")
}
pca_class = function(value){
data = data_long[data_long$class == value,]
pca = princomp(data[, 3:5], cor = T)
summary(pca, loadings=T)
}
x_train = prepare_data("https://drive.google.com/uc?export=download&id=1KDhDT0FE5lkjvn62YTCJ87vZ7A5uS5TT", "X")
y_train = prepare_data("https://drive.google.com/uc?export=download&id=1fZCNBdJ40Df5werSu_Ud4GUmCBcBIfaI", "Y")
z_train = prepare_data("https://drive.google.com/uc?export=download&id=1jdZ2_NiFil0b4EbLBAfDJ43VQcOgulpf", "Z")
data_wide = cbind(x_train, y_train[, 2:ncol(y_train)], z_train[, 2:ncol(z_train)])
x_train_long = transform_long(x_train, 'X')
y_train_long = transform_long(y_train, 'Y')
z_train_long = transform_long(z_train, 'Z')
data_long = x_train_long %>%
left_join(y_train_long, by = c("time series", "time index", "class")) %>%
left_join(z_train_long, by = c("time series", "time index", "class"))
data_long = data_long[, c(2, 3, 4, 5, 6, 1)]
head(x_train)
head(y_train)
head(z_train)
head(data_wide)
head(x_train_long)
head(y_train_long)
head(z_train_long)
head(data_long)
x_train = prepare_data("https://drive.google.com/uc?export=download&id=1KDhDT0FE5lkjvn62YTCJ87vZ7A5uS5TT", "X")
y_train = prepare_data("https://drive.google.com/uc?export=download&id=1fZCNBdJ40Df5werSu_Ud4GUmCBcBIfaI", "Y")
z_train = prepare_data("https://drive.google.com/uc?export=download&id=1jdZ2_NiFil0b4EbLBAfDJ43VQcOgulpf", "Z")
data_wide = cbind(x_train, y_train[, 2:ncol(y_train)], z_train[, 2:ncol(z_train)])
x_train_long = transform_long(x_train, 'X')
y_train_long = transform_long(y_train, 'Y')
z_train_long = transform_long(z_train, 'Z')
data_long = x_train_long %>%
left_join(y_train_long, by = c("time series", "time index", "class")) %>%
left_join(z_train_long, by = c("time series", "time index", "class"))
data_long = data_long[, c(2, 3, 4, 5, 6, 1)]
head(x_train)
head(y_train)
head(z_train)
head(data_wide)
head(x_train_long)
head(y_train_long)
head(z_train_long)
head(data_long)
x_coord = coord(x_train, 'X')
y_coord = coord(y_train, 'Y')
z_coord = coord(z_train, 'Z')
plot_ly(x = x_coord[,"coord_1"], y = y_coord[,"coord_1"], z = z_coord[,"coord_1"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 1")
plot_ly(x = x_coord[,"coord_2"], y = y_coord[,"coord_2"], z = z_coord[,"coord_2"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 2")
plot_ly(x = x_coord[,"coord_3"], y = y_coord[,"coord_3"], z = z_coord[,"coord_3"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 3")
plot_ly(x = x_coord[,"coord_4"], y = y_coord[,"coord_4"], z = z_coord[,"coord_4"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 4")
plot_ly(x = x_coord[,"coord_5"], y = y_coord[,"coord_5"], z = z_coord[,"coord_5"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 5")
plot_ly(x = x_coord[,"coord_6"], y = y_coord[,"coord_6"], z = z_coord[,"coord_6"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 6")
plot_ly(x = x_coord[,"coord_7"], y = y_coord[,"coord_7"], z = z_coord[,"coord_7"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 7")
plot_ly(x = x_coord[,"coord_8"], y = y_coord[,"coord_8"], z = z_coord[,"coord_8"], type="scatter3d", mode="markers") %>%
layout(title = "3D Representation of Accelerometer for Class 8")
knitr::opts_chunk$set(echo = TRUE, message=FALSE, fig.align = "center")
url <- "https://ars.els-cdn.com/content/image/1-s2.0-S1574119209000674-gr4.jpg"
